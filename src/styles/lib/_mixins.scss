// position, static, relative, absolute, fixed
@mixin position($position, $args: null) {
  position: $position;
  @if $args != null {
    @each $dir in top, left, bottom, right, z-index {
      $i: index($args, $dir);
      @if $i {
        #{$dir}: nth($args, $i + 1);
      }
    }
  }
}

@mixin static {
  @include position(static, null);
}
@mixin relative($args: null) {
  @include position(relative, $args);
}
@mixin absolute($args: null) {
  @include position(absolute, $args);
}
@mixin fixed($args: null) {
  @include position(fixed, $args);
}

// border-radius
@mixin border-radius ($radius: 4px) {
	-webkit-border-radius: $radius;
	border-radius: $radius;
	background-clip: padding-box;
}

// box-shadow
@mixin box-shadow($args...) {
	-webkit-box-shadow: $args; /* Android 2.3+, iOS 4.0.2-4.2, Safari 3-4 */
	box-shadow: $args; /* Chrome 6+, Firefox 4+, IE 9+, iOS 5+, Opera 10.50+ */
}

// opacity
@mixin opacity($op: 0.3) {
	-ms-filter: alpha(opacity=#{$op * 100});
	-ms-filter: progid:DXImageTransform.Microsoft.Alpha(Opacity=#{$op*100});
	filter: alpha(#{$op * 100});
	-khtml-opacity: $op;
	-moz-opacity: $op;
	opacity: $op;
}

// transition
@mixin transition($args...) {
	-webkit-transition: all 0.3s ease-out;
	transition: all 0.3s ease-out;
}

// translate
@mixin translate ($x: 1, $y: 1) {
	-webkit-transform: translate($x, $y);
	-ms-transform: translate($x, $y);
	transform: translate($x, $y);
}

// circle
@mixin circle($size: 10px, $color: currentColor) {
  display: block;
  width: $size;
  height: $size;
  border-radius: 50%;
  background: $color;
}
